---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
    Create Kinesis Firehose delivery streams with associated S3 bucket
Parameters:
    # S3
    S3FirehoseInfringementDeliveryBucketName:
        Description: Kinesis Firehose infringement delivery S3 bucket suffix
        Type: String
    # Kinesis Firehose
    FirehoseBufferSizeMb:
        Description: Kinesis Firehose buffer size in MB
        Type: Number
        Default: 1
    FirehoseBufferIntervalSec:
        Description: Kinesis Firehose buffer interval in sec
        Type: Number
        Default: 60
Resources:
    # Kinesis Firehose delivery stream S3 bucket
    S3FirehoseInfringementDeliveryBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Delete
        Properties:
            BucketName: !Ref S3FirehoseInfringementDeliveryBucketName
            # NotificationConfiguration causes circular dependency error
            # NotificationConfiguration:
            #     LambdaConfigurations:
            #         # Product lambda
            #         - Event: s3:ObjectCreated:*
            #           Filter:
            #               S3Key:
            #                   Rules:
            #                       - Name: prefix
            #                         Value: product/
            #           Function: !GetAtt PutProductInDbLambda.Arn
    # Kinesis Firehose IAM Role
    IamFirehoseInfringementDeliveryPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            ManagedPolicyName: !Sub ${AWS::StackName}-IamFirehoseInfringementDeliveryPolicy
            Description: >-
                Grants access to Kinesis Firehose infringement delivery stream to put
                data into S3 bucket
            Path: /
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    # S3
                    - Effect: Allow
                      Action:
                          - s3:GetBucketLocation
                          - s3:ListBucket
                          - s3:PutObject
                          - s3:GetObject
                          - s3:ListBucketMultipartUploads
                          - s3:AbortMultipartUpload
                      Resource:
                          - !Sub ${S3FirehoseInfringementDeliveryBucket.Arn}/*
                    # CloudWatch
                    - Effect: Allow
                      Action:
                          - logs:*
                      Resource:
                          - arn:aws:logs:*:*:*
    IamFirehoseInfringementDeliveryRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: !Sub ${AWS::StackName}-IamFirehoseInfringementDeliveryRole
            Path: /
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - sts:AssumeRole
                      Principal:
                          Service:
                              - firehose.amazonaws.com
            ManagedPolicyArns:
                - !Ref IamFirehoseInfringementDeliveryPolicy
    # Kinesis Firehose product delivery stream
    ProductDeliveryStream:
        Type: AWS::KinesisFirehose::DeliveryStream
        Properties:
            DeliveryStreamName: !Sub ${AWS::StackName}-ProductDeliveryStream
            DeliveryStreamType: DirectPut
            S3DestinationConfiguration:
                BucketARN: !GetAtt S3FirehoseInfringementDeliveryBucket.Arn
                BufferingHints:
                    SizeInMBs: !Ref FirehoseBufferSizeMb
                    IntervalInSeconds: !Ref FirehoseBufferIntervalSec
                CompressionFormat: UNCOMPRESSED
                Prefix: product/
                ErrorOutputPrefix: product-error/
                RoleARN: !GetAtt IamFirehoseInfringementDeliveryRole.Arn
                CloudWatchLoggingOptions:
                    Enabled: true
                    LogGroupName: !Sub ${AWS::StackName}-FirehoseInfringementDeliveryGroup
                    LogStreamName: !Sub ${AWS::StackName}-ProductDeliveryStream
    # Kinesis Firehose infringement delivery stream
    InfringementDeliveryStream:
        Type: AWS::KinesisFirehose::DeliveryStream
        Properties:
            DeliveryStreamName: !Sub ${AWS::StackName}-InfringementDeliveryStream
            DeliveryStreamType: DirectPut
            S3DestinationConfiguration:
                BucketARN: !GetAtt S3FirehoseInfringementDeliveryBucket.Arn
                BufferingHints:
                    SizeInMBs: !Ref FirehoseBufferSizeMb
                    IntervalInSeconds: !Ref FirehoseBufferIntervalSec
                CompressionFormat: UNCOMPRESSED
                Prefix: infringement/
                ErrorOutputPrefix: infringement-error/
                RoleARN: !GetAtt IamFirehoseInfringementDeliveryRole.Arn
                CloudWatchLoggingOptions:
                    Enabled: true
                    LogGroupName: !Sub ${AWS::StackName}-FirehoseInfringementDeliveryGroup
                    LogStreamName: !Sub ${AWS::StackName}-InfringementDeliveryStream
Outputs:
    # Kinesis Firehose delivery stream S3 bucket
    S3FirehoseInfringementDeliveryBucketName:
        Description: Kinesis Firehose infringement delivery S3 bucket name
        Value: !Ref S3FirehoseInfringementDeliveryBucket
    S3FirehoseInfringementDeliveryBucketArn:
        Description: Kinesis Firehose infirngement delivery S3 bucket ARN
        Value: !GetAtt S3FirehoseInfringementDeliveryBucket.Arn
        Export:
            Name: !Sub ${AWS::StackName}:S3FirehoseInfringementDeliveryBucketArn
    # Kinesis Firehose product delivery stream
    ProductDeliveryStreamName:
        Description: Kineis product delivery stream name
        Value: !Ref ProductDeliveryStream
        Export:
            Name: !Sub ${AWS::StackName}:ProductDeliveryStreamName
    # Kinesis Firehose infringement delivery stream
    InfringementDeliveryStreamName:
        Description: Kinesis infringement delivery stream name
        Value: !Ref InfringementDeliveryStream
        Export:
            Name: !Sub ${AWS::StackName}:InfringementDeliveryStreamName
